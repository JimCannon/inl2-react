[{"C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\index.js":"1","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\reportWebVitals.js":"2","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\App.js":"3","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\routes\\Routing.js":"4","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\shared\\provider\\UserProvider.js":"5","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\components\\navigation\\desktopnavigation\\DesktopNavigation.js":"6","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\routes\\RoutingPath.js":"7","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\views\\SignInView.js":"8","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\views\\PlayersView.js":"9","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\views\\HomeView.js":"10","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\shared\\api\\service\\StarWarsAPIService.js":"11","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\components\\profile\\Profile.js":"12","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\shared\\api\\StarWarsAPI.js":"13"},{"size":478,"mtime":1611687141248,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611687096490,"results":"16","hashOfConfig":"15"},{"size":400,"mtime":1611741797060,"results":"17","hashOfConfig":"15"},{"size":1988,"mtime":1613387951479,"results":"18","hashOfConfig":"15"},{"size":901,"mtime":1613387894543,"results":"19","hashOfConfig":"15"},{"size":1068,"mtime":1613387908416,"results":"20","hashOfConfig":"15"},{"size":188,"mtime":1611750290109,"results":"21","hashOfConfig":"15"},{"size":1494,"mtime":1613391214050,"results":"22","hashOfConfig":"15"},{"size":2129,"mtime":1613387912927,"results":"23","hashOfConfig":"15"},{"size":393,"mtime":1613387907274,"results":"24","hashOfConfig":"15"},{"size":294,"mtime":1613025373179,"results":"25","hashOfConfig":"15"},{"size":504,"mtime":1613387924732,"results":"26","hashOfConfig":"15"},{"size":224,"mtime":1613025335236,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1hd0dah",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\index.js",[],["62","63"],"C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\reportWebVitals.js",[],"C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\App.js",[],"C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\routes\\Routing.js",["64","65","66"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport RoutingPath from \"./RoutingPath\";\r\nimport { HomeView } from \"../views/HomeView\";\r\nimport { UserContext } from \"../shared/provider/UserProvider\";\r\nimport { SignInView } from \"../views/SignInView\";\r\nimport { PlayersView } from \"../views/PlayersView\";\r\nimport StarWarsAPIService from \"../shared/api/service/StarWarsAPIService\";\r\n\r\nexport const Routing = (props) => {\r\n  // const [authUser, setAuthUser] = useContext(UserContext);\r\n  // const [starWarsCharacterData, setStarWarsCharacterData] = useContext(UserContext);\r\n  const { starWarsCharacterData } = useContext(UserContext);\r\n  const { authUser } = useContext(UserContext);\r\n  const [authUserTest, setAuthUserTest] = authUser;\r\n  const [starWarsCharacterDataTest, setStarWarsCharacterDataTest] = starWarsCharacterData;\r\n  const [count, setCount] = useState(1);\r\n\r\n  const checkIfUserIsAuthenticatedInBrowser = () => {\r\n    if (!authUserTest && localStorage.getItem(\"user\")) {\r\n      setAuthUserTest(localStorage.getItem(\"user\"));\r\n    }\r\n  };\r\n\r\n  //\r\n  const getDataFromStarWarsAPI = async () => {\r\n    try {\r\n      const response = await StarWarsAPIService.getStarWarsCharacter(count);\r\n      //Store the data in our state\r\n      setStarWarsCharacterDataTest(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIfUserIsAuthenticatedInBrowser();\r\n    //We want make a call to the API the first time we render this page\r\n    getDataFromStarWarsAPI();\r\n  }, []);\r\n\r\n  const { children } = props;\r\n\r\n  return (\r\n    <Router>\r\n      {children}\r\n      <Switch>\r\n        <Route exact path={RoutingPath.homeView} component={HomeView} />\r\n        <Route exact path={RoutingPath.signInView} component={SignInView} />\r\n        <Route exact path={RoutingPath.playersView} component={PlayersView} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\shared\\provider\\UserProvider.js",[],"C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\components\\navigation\\desktopnavigation\\DesktopNavigation.js",["67"],"import { useContext } from \"react\";\r\nimport \"./DesktopNavigation.css\";\r\nimport RoutingPath from \"../../../routes/RoutingPath\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../../shared/provider/UserProvider\";\r\nimport { Profile } from \"../../profile/Profile\";\r\n\r\nexport const DesktopNavigation = () => {\r\n  const { authUser } = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [authUserTest, setAuthUserTest] = authUser;\r\n\r\n  const displayUserIfAuthenticated = () => {\r\n    return authUserTest ? (\r\n      <div className=\"profile\">\r\n        <Profile />\r\n      </div>\r\n    ) : (\r\n      <span onClick={() => history.push(RoutingPath.signInView)} className=\"signIn\">\r\n        Sign in\r\n      </span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"desktopNavigationWrapper\">\r\n      <span onClick={() => history.push(RoutingPath.homeView)}>Home</span>\r\n      {displayUserIfAuthenticated()}\r\n      <span onClick={() => history.push(\"/players\")} className=\"players\">\r\n        Players\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\routes\\RoutingPath.js",[],"C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\views\\SignInView.js",["68"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../shared/provider/UserProvider\";\r\nimport RoutingPath from \"../routes/RoutingPath\";\r\n\r\nexport const SignInView = () => {\r\n  const [loginCredentials, setLoginCredentials] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  // eslint-disable-next-line\r\n  // const [authUser, setAuthUser] = useContext(UserContext);\r\n  const { authUser } = useContext(UserContext);\r\n  const [authUserTest, setAuthUserTest] = authUser;\r\n  const history = useHistory();\r\n\r\n  const signIn = () => {\r\n    setAuthUserTest(loginCredentials.username);\r\n    localStorage.setItem(\"user\", loginCredentials.username);\r\n    history.push(RoutingPath.homeView);\r\n  };\r\n\r\n  const updateLoginCredentials = (event) => {\r\n    setLoginCredentials({\r\n      ...loginCredentials,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>HEJ</h1>\r\n      <form>\r\n        <input\r\n          name=\"username\"\r\n          placeholder=\"username\"\r\n          onChange={(event) => updateLoginCredentials(event)}\r\n        />{\" \"}\r\n        <br />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          onChange={(event) => updateLoginCredentials(event)}\r\n        />\r\n        <br />\r\n        <button type=\"button\" onClick={() => signIn()}>\r\n          Sign in\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\views\\PlayersView.js",["69","70"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../shared/provider/UserProvider\";\r\nimport StarWarsAPIService from \"../shared/api/service/StarWarsAPIService\";\r\n\r\nexport const PlayersView = () => {\r\n  const { starWarsCharacterData, starWarsCharacterCount } = useContext(UserContext);\r\n  const [starWarsCharacterDataTest, setStarWarsCharacterDataTest] = starWarsCharacterData;\r\n  //get the shared characterCounter from useContext\r\n  const [count, setCount] = starWarsCharacterCount;\r\n\r\n  //checks if count is 1. If not, proceed decrementing.\r\n  const unableCountToGetBelow1 = () => {\r\n    count <= 1 ? setCount(1) : setCount(count - 1);\r\n  };\r\n\r\n  const getDataFromStarWarsAPI = async () => {\r\n    try {\r\n      const response = await StarWarsAPIService.getStarWarsCharacter(count);\r\n      //Store the data in our state\r\n      setStarWarsCharacterDataTest(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // const getDataFromStarWarsAPI = async () => {\r\n  //   try {\r\n  //     const response = await StarWarsAPIService.getStarWarsCharacter(count);\r\n  //     //Store the data in our state\r\n  //     setStarWarsCharacterData(response);\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    //We want make a call to the API the first time we render this page\r\n    getDataFromStarWarsAPI();\r\n  }, [count]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Display some delicous data about the character */}\r\n      {/* Using optional chaining incase the data is undefined or null */}\r\n      <h1>Name: {starWarsCharacterDataTest?.data?.name}</h1>\r\n      <h1>Birth Year: {starWarsCharacterDataTest?.data?.birth_year}</h1>\r\n      <h1>Height: {starWarsCharacterDataTest?.data?.height}</h1>\r\n      <h1>Weight: {starWarsCharacterDataTest?.data?.mass}</h1>\r\n      <h1>Gender: {starWarsCharacterDataTest?.data?.gender}</h1>\r\n      <button onClick={() => unableCountToGetBelow1()}>Get previous character</button>\r\n      <button onClick={() => setCount(count + 1)}>Get next chracter</button>\r\n      {console.log(count)}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\views\\HomeView.js",["71"],"import { useContext } from \"react\";\r\nimport { UserContext } from \"../shared/provider/UserProvider\";\r\n\r\nexport const HomeView = () => {\r\n  const { starWarsCharacterData } = useContext(UserContext);\r\n  const [starWarsCharacterDataTest, setStarWarsCharacterDataTest] = starWarsCharacterData;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{starWarsCharacterDataTest?.data?.name}</h1>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\shared\\api\\service\\StarWarsAPIService.js",["72"],"//http is from Axios, NOT from react\r\n//we are importing the \"http\" function from Axios\r\nimport http from \"../StarWarsAPI\";\r\n\r\nconst getStarWarsCharacter = (starWarsCharacterNumber) => {\r\n  return http.get(`/people/${starWarsCharacterNumber}`);\r\n};\r\n\r\nexport default { getStarWarsCharacter };\r\n","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\components\\profile\\Profile.js",["73"],"import { useContext } from \"react\";\r\nimport { UserContext } from \"../../shared/provider/UserProvider\";\r\nimport \"./Profile.css\";\r\n\r\nexport const Profile = () => {\r\n  const { authUser } = useContext(UserContext);\r\n  const [authUserTest, setAuthUserTest] = authUser;\r\n\r\n  return (\r\n    <div className=\"profileWrapper\">\r\n      <img className=\"profileImg\" src={\"https://www.thispersondoesnotexist.com/image\"} alt=\"\"></img>\r\n      <span className=\"displayUsername\">{authUserTest}</span>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\DjangoPC\\Desktop\\Code\\inl2-react\\client\\src\\shared\\api\\StarWarsAPI.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":16,"column":10,"nodeType":"80","messageId":"81","endLine":16,"endColumn":35},{"ruleId":"78","severity":1,"message":"82","line":17,"column":17,"nodeType":"80","messageId":"81","endLine":17,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":40,"column":6,"nodeType":"85","endLine":40,"endColumn":8,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"87","line":11,"column":24,"nodeType":"80","messageId":"81","endLine":11,"endColumn":39},{"ruleId":"78","severity":1,"message":"88","line":14,"column":10,"nodeType":"80","messageId":"81","endLine":14,"endColumn":22},{"ruleId":"78","severity":1,"message":"89","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":18},{"ruleId":"83","severity":1,"message":"90","line":39,"column":6,"nodeType":"85","endLine":39,"endColumn":13,"suggestions":"91"},{"ruleId":"78","severity":1,"message":"92","line":6,"column":37,"nodeType":"80","messageId":"81","endLine":6,"endColumn":65},{"ruleId":"93","severity":1,"message":"94","line":9,"column":1,"nodeType":"95","endLine":9,"endColumn":41},{"ruleId":"78","severity":1,"message":"87","line":7,"column":24,"nodeType":"80","messageId":"81","endLine":7,"endColumn":39},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'starWarsCharacterDataTest' is assigned a value but never used.","Identifier","unusedVar","'setCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkIfUserIsAuthenticatedInBrowser' and 'getDataFromStarWarsAPI'. Either include them or remove the dependency array.","ArrayExpression",["98"],"'setAuthUserTest' is assigned a value but never used.","'authUserTest' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getDataFromStarWarsAPI'. Either include it or remove the dependency array.",["99"],"'setStarWarsCharacterDataTest' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [checkIfUserIsAuthenticatedInBrowser, getDataFromStarWarsAPI]",{"range":"104","text":"105"},"Update the dependencies array to be: [count, getDataFromStarWarsAPI]",{"range":"106","text":"107"},[1613,1615],"[checkIfUserIsAuthenticatedInBrowser, getDataFromStarWarsAPI]",[1407,1414],"[count, getDataFromStarWarsAPI]"]